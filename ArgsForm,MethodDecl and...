private static boolean ArgsForm()
    {//checked
        if(input.equals("char") || input.equals("int") || input.equals("float"))//first(Type)
        {
            boolean onLoop = false;
            do
            {
                if(Type())
                {
                    if(input.equals("identifier"))
                    {
                        getInput();
                        if(input.equals(","))
                        {
                            getInput();
                            if(input.equals("char") || input.equals("int") || input.equals("float"))//first(Type)
                            {
                                onLoop = true;
                            }
                            else
                            {
                                onLoop = false;
                                error("enter type and identifier after , please. error on line "+token.getLine()+" and col "+ token.getCol());
                                while(!isFollow("ArgsForm",input)&& !input.equals("eof")) {
                                    getInput();
                                    System.out.println(input);

                                }
                                return false;
                            }
                        }
                        else
                        {
                            onLoop = false;
                        }
                    }
                    else{
                        onLoop=false;
                        error("enter identifier after type please. error on line "+token.getLine()+" and col "+ token.getCol());
                        while(!isFollow("ArgsForm",input)&& !input.equals("eof")) {
                            getInput();
                            System.out.println(input);

                        }
                        return true;
                    }
                }
                else{  //home sweet home
                    onLoop=false;
                    error("type says error. error on line "+token.getLine()+" and col "+ token.getCol());
                    while(!isFollow("ArgsForm",input)&& !input.equals("eof")) {
                        getInput();
                        System.out.println(input);

                    }
                    return true;
                }

            }while(onLoop);
            if(input.equals(")"))//follow(ArgsForm)
            {
                return true;
            }
            else
            {
                System.out.println("missing ) after argomans in  " + "line " + token.getLine() + "col" + token.getCol());
                return true;
            }
        }
        else
        {
            System.out.println("enter Type of ur identifier!"+" in col "+token.getCol() + " in line" + token.getLine());
            return true;
        }
    }
    
    /////////new
    
    private static boolean MethodDecl()
    {
        getInput();
        if(input.equals("void"))
        {
            getInput();
            if(input.equals("identifier"))
            {
                getInput();
                if(input.equals("("))
                {
                    getInput();
                    if(input.equals(")")){
                        getInput();
                        return Block();
                    }
                    else if(input.equals("char") || input.equals("int") || input.equals("float"))
                    {
                        if(ArgsForm())
                        {
                            if(input.equals(")"))
                            {
                                getInput();
                                if(input.equals("{"))
                                    return Block();
                                else{
                                    error("missing { . error in line "+token.getLine()+" and col "+token.getCol());
                                    while(!isFollow("MethodDecl",input)||!input.equals("eof")) {
                                        getInput();

                                    }
                                    return false;
                                }
                            }
                            else
                            {
                                error("missing ) 2; error in line "+token.getLine()+" and col "+token.getCol());
                                while(!isFollow("MethodDecl",input)||!input.equals("eof")) {
                                    getInput();

                                }
                                return false;
                            }
                        }
                        else{
                            error("ArgsForm says error in line "+token.getLine()+" and col "+token.getCol());
                            while(!isFollow("MethodDecl",input)||!input.equals("eof")) {
                                getInput();

                            }
                            return false;
                        }
                    }
                    else{
                        error("ArgsForm expected here in line " + token.getLine() + " and col " + token.getCol());
                        while(!isFollow("MethodDecl",input)||!input.equals("eof")) {
                            getInput();

                        }
                        return false;
                    }
                }
                else{
                    error("missing ( 2; error in line "+token.getLine()+" and col "+token.getCol());
                    while(!isFollow("MethodDecl",input)||!input.equals("eof")) {
                        getInput();

                    }
                    return false;
                }
            }
            else{
                error("missing identifier; error in line "+token.getLine()+" and col "+token.getCol());
                while(!isFollow("MethodDecl",input)||!input.equals("eof")) {
                    getInput();

                }
                return false;
            }
        }
        else if(input.equals("char") || input.equals("int") || input.equals("float"))
        {
            if(Type())
            {
                if(input.equals("identifier"))
                {
                    getInput();
                    if(input.equals("("))
                    {
                        getInput();
                        if(input.equals(")"))
                        {   //o arg!
                            getInput();
                            return Block();
                        }
                        else if(input.equals("char") || input.equals("int") || input.equals("float"))
                        {
                            if(ArgsForm())
                            {
                                if(input.equals(")"))
                                {
                                    getInput();
                                    return Block();
                                }
                                else
                                {
                                    error("missing ) 2; error in line " + token.getLine() + " and col " + token.getCol());
                                    while(!isFollow("MethodDecl",input)||!input.equals("eof")) {
                                        getInput();

                                    }
                                    return false;
                                }
                            }
                            else{
                                error("ArgsForm expected here in line "+token.getLine()+" and col "+ token.getCol());
                                while(!isFollow("MethodDecl",input)||!input.equals("eof")) {
                                    getInput();

                                }
                                return false;
                            }
                        }
                    }
                    else{
                        error("missing ( 2; error in line " + token.getLine() + " and col " + token.getCol());
                        while(!isFollow("MethodDecl",input)||!input.equals("eof")) {
                            getInput();

                        }
                        return false;
                    }
                }
                error("missing identifier; error in line "+token.getLine()+" and col "+token.getCol());
                while(!isFollow("MethodDecl",input)||!input.equals("eof")) {
                    getInput();

                }
                return false;
            }
        }
        else
        {
            error("error on MethodDecl, return type is not mentioned. use void or Type. error on line "+token.getLine()+" and col "+token.getCol());
            if(input.equals("identifier"))
            {
                getInput();
                if(input.equals("("))
                {
                    getInput();
                    if(input.equals(")"))
                    {   //o arg!
                        getInput();
                        return Block();
                    }
                    else if(input.equals("char") || input.equals("int") || input.equals("float"))
                    {
                        if(ArgsForm())
                        {
                            if(input.equals(")"))
                            {
                                getInput();
                                return Block();
                            }else
                            {
                                error("missing ) 2; error in line " + token.getLine() + " and col " + token.getCol());
                                while(!isFollow("MethodDecl",input)||!input.equals("eof")) {
                                    getInput();

                                }
                                return false;
                            }
                        }
                        else{
                            error("ArgsForm expected here in line "+token.getLine()+" and col "+ token.getCol());
                            while(!isFollow("MethodDecl",input)||!input.equals("eof")) {
                                getInput();

                            }
                            return false;
                        }
                    }
                    else{
                        error("ArgsForm expected here in line "+token.getLine()+" and col "+ token.getCol());
                        while(!isFollow("MethodDecl",input)||!input.equals("eof")) {
                            getInput();

                        }
                        return false;
                    }
                }
                else{
                    error("missing identifier; error in line " + token.getLine() + " and col " + token.getCol());
                    while(!isFollow("MethodDecl",input)||!input.equals("eof")) {
                        getInput();

                    }
                    return false;
                }
            }
            error("missing identifier; error in line "+token.getLine()+" and col "+token.getCol());
            while(!isFollow("MethodDecl",input)||!input.equals("eof")) {
                getInput();

            }
            return false;
        }
        System.out.println("error on MethodDecl2");
        return false;
    }
//////////////////////new

private static boolean Block()
    {  //dunno if its right or anything...:|
        //checked
        boolean result=true;
        if(input.equals("{")){
            getInput();
            while(input.equals("while") ||input.equals("break")||input.equals("return")
                    || input.equals(";") ||input.equals("print") || input.equals("read")
                    || input.equals("{") || input.equals("if") || input.equals("identifier")){

                if(Statement()){
                    result=true;
                }
                else{
                    error("statement reported wrong answer here");

                    result=false;
                    break;
                }

            }
            if(result==true&&input.equals("}")){
                getInput();
                return true;
            }
            else{
                error("some } missing in line "+token.getLine()+"and col "+token.getCol());
                while(!isFollow("Block",input)&&!input.equals("eof")){
                    getInput();
                }
                return true;
            }
        }
        error("expected { in line  "+token.getLine()+"and col "+token.getCol());
        while(!isFollow("Block",input)&&!input.equals("eof")){
            getInput();
        }
        return true;
    }

//////////new

private static boolean Addop()
    {
        if(input.equals("+"))
        {
            getInput();
            return true;
        }
        else if(input.equals("-"))
        {
            getInput();
            return true;
        }
        else
        {
            error("not true operation!");
            while(!isFollow("Addop",input) && !input.equals("eof")){
                getInput();
            }
            return true;
        }
    }

/////////////////new

private static boolean Addop()
    {
        if(input.equals("+"))
        {
            getInput();
            return true;
        }
        else if(input.equals("-"))
        {
            getInput();
            return true;
        }
        else
        {
            error("not true operation!");
            while(!isFollow("Addop",input) && !input.equals("eof")){
                getInput();
            }
            return true;
        }
    }
    //////////////////////////new
    public static boolean Mulop()
    {
        if(input.equals("*")||input.equals("/")||input.equals("%")){
            getInput();
            return true;
        }
        error("not true operator...");
        while(!isFollow("Mulop",input) && !input.equals("eof")){
            getInput();
        }
        return true;

    }
    //////////////new
    public static boolean CondTerm()
    {//checked
        if(CondFact()){
            while(input.equals("&&")) {
                getInput();
                if(CondFact())
                    continue;
                else{
                    error("some fact is missing in condition line" + token.getLine() + "and col" + token.getCol());
                    while(!isFollow("CondTerm",input)&& !input.equals("eof")){
                        getInput();
                    }
                    return true;
                }
            }
            return true;
        }
        error("there must be a condition fact here in line" + token.getLine() + "and col" + token.getCol());
        while(!isFollow("Condition",input)&&!input.equals("eof")){
            getInput();
        }
        return true;

    }
    
    ////////////new
    private static boolean CondFact()
    {
        if(input.equals("-") ||input.equals("identifier")||input.equals("Terminal")
                || input.equals("number") ||input.equals("new") || input.equals("("))//first(exp)
        {
            if(Expression())
            {
                if(Relop())
                {
                    if(input.equals("-") ||input.equals("identifier")||input.equals("Terminal")
                            || input.equals("number") ||input.equals("new") || input.equals("("))//first(exp)
                    {
                        if(Expression())
                        {
                            return true;
                        }
                        else
                        {
                            error("wrong 2'nd exp in condition!");
                            while(!isFollow("CondFact",input)&&!input.equals("eof")){
                                getInput();
                            }
                            return true;
                        }
                    }
                    else
                    {
                        error("missing 2'nd conditional exp!");
                        while(!isFollow("CondFact",input)&&!input.equals("eof")){
                            getInput();
                        }
                        return true;
                    }
                }
                else{
                    error("missing relop here ");
                    while(!isFollow("CondFact",input)&&!input.equals("eof")) {
                        getInput();
                    }
                    return true;
                }

            }
            else
            {
                error("wrong 1'st exp in condition!");
                while(!isFollow("CondFact",input)&&!input.equals("eof")){

                }
                return true;
            }
        }
        else
        {
            error("missing conditional expression!");
            while(!isFollow("CondFact",input)&&!input.equals("eof")){
                getInput();
            }
            return true;
        }
        //return true;
    }
    
    //////////////new
    private static boolean Condition()
    {
        if(input.equals("-") ||input.equals("identifier")||input.equals("Terminal")
                || input.equals("number") ||input.equals("new") || input.equals("("))//first(CondTerm)
        {
            if(CondTerm())
            {
                if(input.equals("||"))//||
                {
                    getInput();
                    if(input.equals("-") ||input.equals("identifier")||input.equals("Terminal")
                            || input.equals("number") ||input.equals("new") || input.equals("("))//first(CondTerm)
                    {
                        while(CondTerm())
                        {
                            if(input.equals("||"))
                            {
                                getInput();
                                if(input.equals("-") ||input.equals("identifier")||input.equals("Terminal")
                                        || input.equals("number") ||input.equals("new") || input.equals("("))//first(CondTerm)
                                {
                                    continue;
                                }
                                else
                                {
                                    error("no CondTerm after || here!");
                                    while(!isFollow("Condition",input)&&!input.equals("eof")) {
                                        getInput();
                                    }
                                    return true;
                                }
                            }
                            else if(input.equals(")"))//follow(Condition)
                            {
                                return true;
                            }
                            else
                            {
                                error("wrong conditon!/no condterm");
                                while(!isFollow("Condition",input)&&!input.equals("eof")) {
                                    getInput();
                                }
                                return true;

                            }
                        }

                        error("wrong condterm");
                        while(!isFollow("Condition",input)&&!input.equals("eof")) {
                            getInput();
                        }
                        return true;

                    }
                    else
                    {
                        error("no CondTerm after ||!");
                        while(!isFollow("Condition",input)&&!input.equals("eof")) {
                            getInput();
                        }
                        return true;
                    }
                }
                else if(input.equals(")"))//follow(Condition)
                {
                    return true;
                }
                else
                {
                    error("wrong condterm here!");
                    while(!isFollow("Condition",input)&&!input.equals("eof")) {
                        getInput();
                    }
                    return true;
                }
            }
            else
            {
                error("wrong condterm here!");
                while(!isFollow("Condition",input)&&!input.equals("eof")) {
                    getInput();
                }
                return true;
            }
        }
        else
        {
            error("wrong Condition/no CondTerm");
            while(!isFollow("Condition",input)&&!input.equals("eof")) {
                getInput();
            }
            return true;
        }
    }
///////////////////////////////statement/////////////////////////////////////
    private static boolean Statement()
    {
        if(input.equals("identifier"))
        {
            if(Designator())
            {
                if(input.equals("="))
                {
                    getInput();
                    if(input.equals("-") ||input.equals("identifier")||input.equals("Terminal")
                            || input.equals("number") ||input.equals("new") || input.equals("("))//first(exp)
                    {
                        if(Expression())
                        {
                            if(input.equals(";"))
                            {
                                getInput();
                                return true;
                            }
                            else
                            {
                                error("missing ; in statement! in line" + token.getLine() + "in col: "+token.getCol());
                                while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                                {
                                    getInput();
                                }
                                return true;
                            }
                        }
                        else
                        {
                            error("wrong exp in statement in line "+token.getLine() +" in col "+token.getCol());
                            while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                            {
                                getInput();
                            }
                            return true;
                        }
                    }
                    else
                    {
                        error("missing exp in line "+token.getLine() +" in col "+token.getCol());
                        while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                        {
                            getInput();
                        }
                        return true;
                    }
                }
                else if(input.equals("("))
                {
                    getInput();
                    if(input.equals("-") ||input.equals("identifier")||input.equals("Terminal")
                            || input.equals("number") ||input.equals("new") || input.equals("("))//first(ActPars)
                    {
                        if(ActPars())
                        {
                            if(input.equals(")"))
                            {
                                getInput();
                                if(input.equals(";"))
                                {
                                    getInput();
                                    return true;
                                }
                                else
                                {
                                    error("missing ; in line "+token.getLine() +" in col "+token.getCol());
                                    while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                                    {
                                        getInput();
                                    }
                                    return true;
                                }
                            }
                            else
                            {
                                error("missing ) in line "+token.getLine() +" in col "+token.getCol());
                                while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                                {
                                    getInput();
                                }
                                return true;
                            }
                        }
                        else
                        {
                            error("wrong in line "+token.getLine() +" in col "+token.getCol());
                            while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                            {
                                getInput();
                            }
                            return true;
                        }
                    }
                    else
                    {
                        if(input.equals(")"))
                        {
                            getInput();
                            if(input.equals(";"))
                            {
                                getInput();
                                return true;
                            }
                            else
                            {
                                error("missing ; in line "+token.getLine() +" in col "+token.getCol());
                                while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                                {
                                    getInput();
                                }
                                return true;
                            }
                        }
                        else
                        {
                            error("missing ) in line "+token.getLine() +" in col "+token.getCol());
                            while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                            {
                                getInput();
                            }
                            return true;
                        }
                    }
                }
                else if(input.equals("++"))
                {
                    getInput();
                    if(input.equals(";"))
                    {
                        getInput();
                        return true;
                    }
                    else
                    {
                        error("missing ; in line "+token.getLine() +" in col "+token.getCol());
                        while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                        {
                            getInput();
                        }
                        return true;
                    }

                }
                else if(input.equals("--"))
                {
                    getInput();
                    if(input.equals(";"))
                    {
                        getInput();
                        return true;
                    }
                    else
                    {
                        error("missing ; in line "+token.getLine() +" in col "+token.getCol());
                        while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                        {
                            getInput();
                        }
                        return true;
                    }
                }
                else
                {
                    error("wrong follow of designator in line" + token.getLine() +"in col "+token.getCol());
                    while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                    {
                        getInput();
                    }
                    return true;
                }
            }
            else
            {
                error("wrong designator in statement! in line "+ token.getLine() +"in col "+token.getCol());
                while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                {
                    getInput();
                }
                return true;
            }
        }
        else if(input.equals("if"))
        {
            getInput();
            if(input.equals("("))
            {
                getInput();
                if(input.equals("-") ||input.equals("identifier")||input.equals("Terminal")
                        || input.equals("number") ||input.equals("new") || input.equals("("))//first(Condition)
                {
                    if (Condition())
                    {
                        if(input.equals(")"))
                        {
                            getInput();
                            if(input.equals("while") ||input.equals("break")||input.equals("return")
                                    || input.equals(";") ||input.equals("print") || input.equals("read")
                                    || input.equals("{") || input.equals("if") || input.equals("identifier"))//first(statement)
                            {
                                if(Statement())
                                {
                                    if(input.equals("else"))
                                    {
                                        getInput();
                                        if(input.equals("while") ||input.equals("break")||input.equals("return")
                                                || input.equals(";") ||input.equals("print") || input.equals("read")
                                                || input.equals("{") || input.equals("if") || input.equals("identifier"))//first(statement)
                                        {
                                            if(Statement())
                                            {
                                                return true;
                                            }
                                        }
                                        else
                                        {
                                            error("missing stmnt on else part! in line "+ token.getLine() +"in col "+token.getCol());
                                            while(!(isFollow("Statement",input)) && !(input.equals("eof")))
                                            {
                                                getInput();
                                            }
                                            return true;
                                        }
                                    }
                                    else
                                    {   //check follow?!
                                        return true;
                                    }
                                }
                            }
                            else
                            {error("missing stmnt in if! in line "+ token.getLine() +"in col "+token.getCol());
                                while(!(isFollow("Statement",input)) && !(input.equals("eof")))
                                {
                                    getInput();
                                }
                                return true;
                            }
                        }
                        else
                        {
                            error("missing ) in line "+ token.getLine() +"in col "+token.getCol());
                            while(!(isFollow("Statement",input)) && !(input.equals("eof")))
                            {
                                getInput();
                            }
                            return true;
                        }
                    }
                    else
                    {
                        error("wrong if condition in statement! in line "+ token.getLine() +"in col "+token.getCol());
                        while(!(isFollow("Statement",input)) && !(input.equals("eof")))
                        {
                            getInput();
                        }
                        return true;
                    }
                }
                else
                {
                    error("missing conditionin if in statement! in line "+ token.getLine() +"in col "+token.getCol());
                    while(!(isFollow("Statement",input)) && !(input.equals("eof")) )
                    {
                        getInput();
                    }
                    return true;
                }
            }
            else
            {
                error("missing ( in statement! in line "+ token.getLine() +"in col "+token.getCol());
                while(!(isFollow("Statement",input)) && !(input.equals("eof")))
                {
                    getInput();
                }
                return true;
            }
        }
        else if(input.equals("while"))
        {
            getInput();
            if(input.equals("("))
            {
                getInput();
                if(input.equals("-") ||input.equals("identifier")||input.equals("Terminal")
                        || input.equals("number") ||input.equals("new") || input.equals("("))//first(exp)
                {
                    if(Condition())
                    {
                        if(input.equals(")"))
                        {
                            getInput();
                            if(input.equals("while") ||input.equals("break")||input.equals("return")
                                    || input.equals(";") ||input.equals("print") || input.equals("read")
                                    || input.equals("{") || input.equals("if") || input.equals("identifier"))//first(statement)
                            {
                                if(Statement())
                                {
                                    return true;
                                }
                                else
                                {
                                    error("wrong while in statement! in line "+ token.getLine() +"in col "+token.getCol());
                                    while(!(isFollow("Statement",input)) && !(input.equals("eof")))
                                    {
                                        getInput();
                                    }
                                    return true;
                                }
                            }
                            else
                            {
                                error("warning no stmt in while?!! in line "+ token.getLine() +"in col "+token.getCol());
                                while(!(isFollow("Statement",input)) && !(input.equals("eof")))
                                {
                                    getInput();
                                }
                                return true;
                            }
                        }
                        else
                        {
                            error("missing ) in line "+ token.getLine() +"in col "+token.getCol());
                            while(!(isFollow("Statement",input)) && !(input.equals("eof")))
                            {
                                getInput();
                            }
                            return true;
                        }
                    }
                    else
                    {
                        error("wrong whiles condition in statement! in line "+ token.getLine() +"in col "+token.getCol());
                        while(!(isFollow("Statement",input)) && !(input.equals("eof")))
                        {
                            getInput();
                        }
                        return true;
                    }
                }
                else
                {
                    error("missing while condition  in statement! in line "+ token.getLine() +"in col "+token.getCol());
                    while(!(isFollow("Statement",input)) && !(input.equals("eof")))
                    {
                        getInput();
                    }
                    return true;
                }

            }
            else
            {
                error("missing ( in while - in statement! in line "+ token.getLine() +"in col "+token.getCol());
                while(!(isFollow("Statement",input)) && !(input.equals("eof")))
                {
                    getInput();
                }
                return true;
            }
        }
        else if(input.equals("break"))
        {
            getInput();
            if(input.equals(";"))
            {
                getInput();
                return true;
            }
            else
            {
                error("missing ; in break in line "+ token.getLine() +"in col "+token.getCol());
                while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                {
                    getInput();
                }
                return true;
            }
        }
        else if(input.equals("return"))
        {

            getInput();

            if(input.equals("-") ||input.equals("identifier")||input.equals("Terminal")
                    || input.equals("number") ||input.equals("new") || input.equals("("))//first(exp)
            {
                if(Expression())
                {
                    if(input.equals(";"))
                    {
                        System.out.println("return accepts it");
                        getInput();
                        return true;
                    }
                    else
                    {
                        error("missing ; in return in line "+ token.getLine() +"in col "+token.getCol());
                        while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                        {
                            getInput();
                        }
                        return true;
                    }
                }
                else
                {
                    error("wrong return expression in line "+ token.getLine() +"in col "+token.getCol());
                    while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                    {
                        getInput();
                    }
                    return true;
                }
            }
            else
            {
                if(input.equals(";"))
                {
                    getInput();
                    return true;
                }
                else
                {
                    error("missing ; in return in line "+ token.getLine() +"in col "+token.getCol());
                    while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                    {
                        getInput();
                    }
                    return true;
                }
            }
        }
        else if(input.equals("print"))
        {
            getInput();
            if(input.equals("("))
            {
                getInput();
                if(input.equals("-") ||input.equals("identifier")||input.equals("Terminal")
                        || input.equals("number") ||input.equals("new") || input.equals("("))//first(exp)
                {
                    if(Expression())
                    {
                        if(input.equals(","))
                        {
                            getInput();
                            if(input.equals("number"))
                            {
                                getInput();
                                if(input.equals(")"))
                                {
                                    getInput();
                                    if(input.equals(";"))
                                    {
                                        getInput();
                                        return true;
                                    }
                                    else
                                    {
                                        error("missing in line "+ token.getLine() +"in col "+token.getCol());
                                        while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                                        {
                                            getInput();
                                        }
                                        return true;
                                    }
                                }
                                else
                                {
                                    error("missing ) in print "+ token.getLine() +"in col "+token.getCol());
                                    while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                                    {
                                        getInput();
                                    }
                                    return true;
                                }
                            }
                            else
                            {
                                error("missing number in print in line "+ token.getLine() +"in col "+token.getCol());
                                while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                                {
                                    getInput();
                                }
                                return true;
                            }
                        }
                        else
                        {
                            if(input.equals(")"))
                            {
                                getInput();
                                if(input.equals(";"))
                                {
                                    getInput();
                                    return true;
                                }
                                else
                                {
                                    error("missing ; in print in line "+ token.getLine() +"in col "+token.getCol());
                                    while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                                    {
                                        getInput();
                                    }
                                    return true;
                                }
                            }
                            else
                            {
                                error("missing ) in line "+ token.getLine() +"in col "+token.getCol());
                                while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                                {
                                    getInput();
                                }
                                return true;
                            }
                        }
                    }
                    else
                    {
                        error("wrong exp in print in line "+ token.getLine() +"in col "+token.getCol());
                        while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                        {
                            getInput();
                        }
                        return true;
                    }
                }
                else
                {
                    error("missing exp in print in line "+ token.getLine() +"in col "+token.getCol());
                    while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                    {
                        getInput();
                    }
                    return true;
                }
            }
            else
            {
                error("missing ( in print in line "+ token.getLine() +"in col "+token.getCol());
                while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                {
                    getInput();
                }
                return true;
            }
        }
        else if(input.equals("read"))
        {
            getInput();
            if(input.equals("("))
            {
                getInput();
                if(input.equals("identifier"))
                {
                    if(Designator())
                    {
                        if(input.equals(")"))
                        {
                            getInput();
                            if(input.equals(";"))
                            {
                                getInput();
                                return true;
                            }
                            else
                            {
                                error("missing ; in line "+ token.getLine() +"in col "+token.getCol());
                                while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                                {
                                    getInput();
                                }
                                return true;
                            }
                        }
                        else
                        {
                            error("missing ) in read in line "+ token.getLine() +"in col "+token.getCol());
                            while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                            {
                                getInput();
                            }
                            return true;
                        }
                    }
                    else
                    {
                        error("wrong designator in readt in line "+ token.getLine() +"in col "+token.getCol());
                        while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                        {
                            getInput();
                        }
                        return true;
                    }
                }
                else
                {
                    error("no designator in read in line "+ token.getLine() +"in col "+token.getCol());
                    while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                    {
                        getInput();
                    }
                    return true;
                }
            }
            else
            {
                error("missing ( in read in line "+ token.getLine() +"in col "+token.getCol());
                while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
                {
                    getInput();
                }
                return true;
            }
        }
        else if(input.equals(";"))
        {
            getInput();
            return true;
        }
        else if(input.equals("{"))//first(Block)
        {
            if(Block())
                return true;
        }
        else
        {
            error("wrong stmnt sig;) in line "+ token.getLine() +"in col "+token.getCol());
            while(!(isFollow("Statement",input)) && !(input.equals("eof")) && !(input.equals(";")))
            {
                getInput();
            }
            return true;
        }
        return true;
    }
//////////////////////////Designator//////
 private static boolean Designator()
    {//checked
        boolean result = true;
        if(input.equals("identifier"))
        {
            getInput();
            while(input.equals(".") || input.equals("["))
            {
                if(input.equals("."))
                {
                    getInput();
                    if(input.equals("identifier"))
                    {
                        getInput();
                    }
                    else
                    {
                        error("missing id after . in col :"+ token.getCol() +"in line : " + token.getLine());
                        while(!isFollow("Designator",input) && !input.equals("eof"))
                        {
                            getInput();
                        }
                        result = true;
                    }
                }
                else if(input.equals("["))
                {
                    getInput();
                    if(input.equals("-") ||input.equals("identifier")||input.equals("Terminal")
                            || input.equals("number") ||input.equals("new") || input.equals("("))//first(exp)
                    {
                        if(Expression())
                        {
                            if(input.equals("]"))
                            {
                                getInput();
                            }
                            else
                            {
                                error("] baste ja munde!in col: " + token.getCol() + "in col" + token.getLine());
                                while(!isFollow("Designator",input) && !input.equals("eof"))
                                {
                                    getInput();
                                }
                                result = true;
                            }
                        }
                        else
                        {
                            System.out.println("wrong exp on designator in line:" + token.getLine() + "in col "+ token.getCol());
                            while(!isFollow("Designator",input) && !input.equals("eof"))
                            {
                                getInput();
                            }
                            result = true;
                        }
                    }
                    else
                    {
                        System.out.println("first exp was expected in line: "+token.getLine()+"in col: "+token.getCol());
                        while(!isFollow("Designator",input) && !input.equals("eof"))
                        {
                            getInput();
                        }
                        result = true;
                    }
                }
                else
                {

                    System.out.println("wrong designator form no [ no . !! in line: "+token.getLine()+"in col "+token.getCol());
                    while(!isFollow("Designator",input) && !input.equals("eof"))
                    {
                        getInput();
                    }
                    result = true;
                }
            }
        }
        return  result;
    }  //not checked ep
//////////////////////////////////////new
private static boolean Expression()
    {
        if(input.equals("-"))
        {
            getInput();
            if(input.equals("identifier")||input.equals("Terminal") || input.equals("number") ||input.equals("new") || input.equals("("))
            {
                if(Term())
                {

                    if(input.equals("+") || input.equals("-")) //AddOp!
                    {
                        while(Addop())
                        {
                            if(input.equals("identifier")||input.equals("Terminal") || input.equals("number") ||input.equals("new") || input.equals("("))
                            {
                                if(Term())
                                {
                                    if(input.equals("+") || input.equals("-"))
                                    {
                                        continue;
                                    }
                                    else if(input.equals(";") || input.equals(",") || input.equals("==") ||
                                            input.equals("!=")||input.equals("<")||input.equals("<=")||input.equals(">")||input.equals(">=") || input.equals("]"))//follow(Expression)
                                    {
                                        return true;
                                    }
                                    else
                                    {
                                        error("wrong exp5" + token.getCol() + "in line " + token.getLine());
                                        while(!isFollow("Expression",input)&&!input.equals("eof"))   {
                                            getInput();
                                        }
                                        return true;
                                    }
                                }
                            }
                            else
                            {
                                System.out.println("missing term!"+"in col "+token.getCol() + "in line "+ token.getLine());
                                return false;
                            }
                        }
                        error("addop omiitted here! fix it please!") ;
                        while(!isFollow("Expression",input)&&!input.equals("eof"))   {
                            getInput();
                        }
                        return true;
                    }
                    else
                    {
                        return true;
                    }
                }
                else
                {
                    error("wrong Term in expression!");
                    while(!isFollow("Expression",input)&&!input.equals("eof"))   {
                        getInput();
                    }
                    return false;
                }
            }
            else
            {
                error("no term in expression"+"in col"+ token.getCol() + "in line "+ token.getLine());
                while(!isFollow("Expression",input)&&!input.equals("eof"))   {
                    getInput();
                }
                return true;
            }
        }
        else //[-]term na! khode term!
        {

            if(input.equals("identifier")||input.equals("Terminal") || input.equals("number") ||input.equals("new") || input.equals("("))
            {
                if(Term())
                {
                    if(input.equals("+") || input.equals("-")) //AddOp!
                    {
                        while(Addop())
                        {
                            if(input.equals("identifier")||input.equals("Terminal") || input.equals("number") ||input.equals("new") || input.equals("("))
                            {
                                if(Term())
                                {
                                    if(input.equals("+") || input.equals("-"))
                                    {
                                        continue;
                                    }
                                    else if(input.equals(";") || input.equals(",") || input.equals("==") ||
                                            input.equals("!=")||input.equals("<")||input.equals("<=")||input.equals(">")||input.equals(">=") || input.equals("]"))//follow(Expression)
                                    {
                                        return true;
                                    }
                                    else
                                    {
                                        error("err on exp" + input);
                                        error("wrong exp4" + token.getCol() + "in line " + token.getLine());
                                        while(!isFollow("Expression",input)&&!input.equals("eof"))   {
                                            getInput();
                                        }
                                        return true;
                                    }
                                }
                                else{
                                    error("term resurns wrong answer here!");
                                    while(!isFollow("Expression",input)&&!input.equals("eof"))   {
                                        getInput();
                                    }
                                    return true;
                                }
                            }
                            else
                            {
                                error("missing term! in line "+ token.getLine()+" and col "+token.getCol());
                                while(!isFollow("Expression",input)&&!input.equals("eof"))   {
                                    getInput();
                                }
                                return true;
                            }
                        }
                        error("addop was omitted, fix in soon!");
                        while(!isFollow("Expression",input)&&!input.equals("eof"))   {
                            getInput();
                        }
                        return true;
                    }
                    else
                    {
                        return true;
                    }
                }
                else
                {
                    error("wrong Term in expression !");
                    while(!isFollow("Expression",input)&&!input.equals("eof"))   {
                        getInput();
                    }
                    return true;
                }
            }
            else
            {

                error("no term in expression"+"in col"+ token.getCol() + "in line "+ token.getLine());
                while(!isFollow("Expression",input)&&!input.equals("eof"))   {
                    getInput();
                }
                return true;
            }
        }


    }
